module seq_mulll_tb;  
reg clk;  
reg reset;  
reg [3:0] A;  
reg [3:0] B;  
wire [7:0] product;  
seq_mulll_rtl uut (  
.clk(clk),  
.reset(reset),  
.A(A),  
.B(B),  
.product(product)  
);  
initial begin  
clk = 0;  
forever #5 clk = ~clk;  
end  
initial begin  
reset = 1;  
A = 4'b0;  
B = 4'b0;  
#20;  
reset = 0;  
@(posedge clk);  
A = 4'b0011;  
B = 4'b0010;  
#50;  
$display("Test Case 1: A = %b, B = %b, Product = %b", A, B, product);  
reset = 1;   
#20;  
reset = 0;  
@(posedge clk);  
A = 4'b0101;  
B = 4'b0011;  
#50;  
$display("Test Case 2: A = %b, B = %b, Product = %b", A, B, product);  
$stop;  
end  
endmodule
