module seq_mulll_rtl (  
input clk,  
input reset,  
input [3:0] A,  
input [3:0] B,  
output reg [7:0] product  
);  
reg [3:0] multiplicand;  
reg [3:0] multiplier;  
reg [7:0] partial_product;  
reg [2:0] count;  
always @(posedge clk or posedge reset) begin  
if (reset) begin  
multiplicand <= A;  
multiplier <= B;  
partial_product <= 8'b0;  
count <= 3'b0;  
product <= 8'b0;  
end else if (count < 4) begin  
if (multiplier[0] == 1) begin  
partial_product <= partial_product + (multiplicand << count);  
end  
multiplier <= multiplier >> 1;  
count <= count + 1;  
end else begin  
product <= partial_product;  
end  
end  
endmodule 
